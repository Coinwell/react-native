platform :ios do
  before_all do
    setup_circle_ci
  end

 # 2.0
 desc "Upload to Testflight (Staging)"
 lane :upload_testflight_staging do

   increment_build_number(
      build_number: latest_testflight_build_number(
        initial_build_number: 1,
        version: get_version_number(
          xcodeproj: "ios/Chat.xcodeproj",
          target: "Chat"
        )
      ) + 1,
      xcodeproj: "ios/Chat.xcodeproj",
   )
  

  # automatic code signing
  disable_automatic_code_signing(
    path: "ios/Chat.xcodeproj"
  )
  
   # Set up Distribution code signing and build the app
   match(type: "appstore")

   gym(scheme: "Chat", workspace: "ios/Chat.xcworkspace")

   # Upload the binary to TestFlight and automatically publish
   # to the configured beta testing group
   pilot(skip_submission: true)
  #  pilot(
  #    distribute_external: true,
  #    notify_external_testers: true,
  #    groups: ["HelloWorld Beta Testers"],
  #    changelog: "This is another new build from CircleCI!"
  #  )
 end

 desc "Upload to Testflight (Production)"
 lane :upload_testflight_production do
  app_identifier "chat.n2n2.Chat" 

   increment_build_number(
      build_number: latest_testflight_build_number(
        initial_build_number: 1,
        version: get_version_number(
          xcodeproj: "ios/Chat.xcodeproj",
          target: "Chat"
        )
      ) + 1,
      xcodeproj: "ios/Chat.xcodeproj",
   )
  

  # automatic code signing
  disable_automatic_code_signing(
    path: "ios/Chat.xcodeproj"
  )
  
   # Set up Distribution code signing and build the app
   match(type: "appstore")

   gym(scheme: "Chat", workspace: "ios/Chat.xcworkspace")

   # Upload the binary to TestFlight and automatically publish
   # to the configured beta testing group
   pilot(skip_submission: true)
  #  pilot(
  #    distribute_external: true,
  #    notify_external_testers: true,
  #    groups: ["HelloWorld Beta Testers"],
  #    changelog: "This is another new build from CircleCI!"
  #  )
 end
end
 
